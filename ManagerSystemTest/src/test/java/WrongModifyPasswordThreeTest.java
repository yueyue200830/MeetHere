// Generated by Selenium IDE

import io.qameta.allure.Description;
import io.qameta.allure.Feature;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

@Feature("错误地修改密码，新密码格式不正确，测试特征：不含数字，不含小写字母，不含大小字母，不含特殊字符，过长，过短")
public class WrongModifyPasswordThreeTest extends BaseTest{
  //todo 几个方法要分开跑，不然可能会出现无法识别下拉菜单组件的情况（builder.moveToElement(element).perform();方法失效）
  //输入的新密码长度过长
  @Test
  @Description("输入新密码长度过长")
  public void wrongModifyPasswordThreeA() {
    this.logIn();
    String password = BaseTest.generateString(30);
    WebElement element = driver.findElement(By.cssSelector(".el-icon-arrow-down"));
    Actions builder = new Actions(driver);
    builder.moveToElement(element).perform();
    try{
      Thread.sleep(1200);
    }
    catch (InterruptedException e)
    {
      e.printStackTrace();
    }
    driver.findElement(By.cssSelector(".el-dropdown-menu__item:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).sendKeys("Rua33@");
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__icon")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector("div:nth-child(1) > .el-button--primary > span")).click();
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("修改密码失败，新密码格式不正确(6-16位，大小写字母数字特殊字符)"));
  }

  @Test
  @Description("不含数字")
  public void wrongModifyPasswordThreeB() {
    this.logIn();
    String password = "Ruaaa@";
    WebElement element = driver.findElement(By.cssSelector(".el-icon-arrow-down"));
    Actions builder = new Actions(driver);
    builder.moveToElement(element).perform();
    try{
      Thread.sleep(1200);
    }
    catch (InterruptedException e)
    {
      e.printStackTrace();
    }
    driver.findElement(By.cssSelector(".el-dropdown-menu__item:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).sendKeys("Rua33@");
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__icon")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector("div:nth-child(1) > .el-button--primary > span")).click();
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("修改密码失败，新密码格式不正确(6-16位，大小写字母数字特殊字符)"));
  }

  @Test
  @Description("不含大写字母")
  public void wrongModifyPasswordThreeC() {
    this.logIn();
    String password = "ruaa2@";
    WebElement element = driver.findElement(By.cssSelector(".el-icon-arrow-down"));
    Actions builder = new Actions(driver);
    builder.moveToElement(element).perform();
    try{
      Thread.sleep(1200);
    }
    catch (InterruptedException e)
    {
      e.printStackTrace();
    }
    driver.findElement(By.cssSelector(".el-dropdown-menu__item:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).sendKeys("Rua33@");
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__icon")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector("div:nth-child(1) > .el-button--primary > span")).click();
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("修改密码失败，新密码格式不正确(6-16位，大小写字母数字特殊字符)"));
  }

  @Test
  @Description("不含小写字母")
  public void wrongModifyPasswordThreeD() {
    this.logIn();
    String password = "RUAA222@";
    WebElement element = driver.findElement(By.cssSelector(".el-icon-arrow-down"));
    Actions builder = new Actions(driver);
    builder.moveToElement(element).perform();
    try{
      Thread.sleep(1200);
    }
    catch (InterruptedException e)
    {
      e.printStackTrace();
    }
    driver.findElement(By.cssSelector(".el-dropdown-menu__item:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).sendKeys("Rua33@");
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__icon")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector("div:nth-child(1) > .el-button--primary > span")).click();
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("修改密码失败，新密码格式不正确(6-16位，大小写字母数字特殊字符)"));
  }

  @Test
  @Description("不含特殊字母")
  public void wrongModifyPasswordThreeE() {
    this.logIn();
    String password = "Ruaaa2222";
    WebElement element = driver.findElement(By.cssSelector(".el-icon-arrow-down"));
    Actions builder = new Actions(driver);
    builder.moveToElement(element).perform();
    try{
      Thread.sleep(1200);
    }
    catch (InterruptedException e)
    {
      e.printStackTrace();
    }
    driver.findElement(By.cssSelector(".el-dropdown-menu__item:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).sendKeys("Rua33@");
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__icon")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector("div:nth-child(1) > .el-button--primary > span")).click();
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("修改密码失败，新密码格式不正确(6-16位，大小写字母数字特殊字符)"));
  }

  @Test
  @Description("过短")
  public void wrongModifyPasswordThreeF() {
    this.logIn();
    String password = "Ru2@";
    WebElement element = driver.findElement(By.cssSelector(".el-icon-arrow-down"));
    Actions builder = new Actions(driver);
    builder.moveToElement(element).perform();
    try{
      Thread.sleep(1200);
    }
    catch (InterruptedException e)
    {
      e.printStackTrace();
    }
    driver.findElement(By.cssSelector(".el-dropdown-menu__item:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__inner")).sendKeys("Rua33@");
    driver.findElement(By.cssSelector(".el-row:nth-child(2) .el-input__icon")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3)")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(3) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-row:nth-child(4) .el-input__inner")).sendKeys(password);
    driver.findElement(By.cssSelector("div:nth-child(1) > .el-button--primary > span")).click();
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("修改密码失败，新密码格式不正确(6-16位，大小写字母数字特殊字符)"));
  }
}
