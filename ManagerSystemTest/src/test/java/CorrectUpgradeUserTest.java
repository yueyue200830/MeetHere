// Generated by Selenium IDE

import io.qameta.allure.Description;
import io.qameta.allure.Feature;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.List;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

@Feature("升级用户为管理员成功")
public class CorrectUpgradeUserTest extends BaseTest {

  @Test
  @Description("测试的是第二行用户，所以第二行数据不能是管理员，否则测试失败")
  public void correctUpgradeUser() {
    this.logIn();
    WebDriverWait wait = new WebDriverWait(driver,10);
    wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".el-table__row:nth-child(2) .el-checkbox__inner")));
    driver.findElement(By.cssSelector(".el-table__row:nth-child(2) .el-checkbox__inner")).click();
    driver.findElement(By.cssSelector(".el-table__row:nth-child(2) > .el-table_1_column_5 span")).click();
    driver.findElement(By.cssSelector(".el-table__row:nth-child(2) .el-checkbox__inner")).click();
    //List<WebElement> elements = driver.findElements(By.cssSelector("p"));
    if(driver.findElement(By.cssSelector("p")).getText().equals("该用户已经是管理员！")){
      System.out.println("第二行数据必须是普通用户！");
    }else{
      assertThat(driver.findElement(By.cssSelector("p")).getText(), is("升级用户为管理员成功"));
      driver.findElement(By.cssSelector(".el-button--small")).click();
    }

  }
}
