// Generated by Selenium IDE
import io.qameta.allure.Description;
import io.qameta.allure.Feature;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

@Feature("修改场馆信息失败")
public class ModifyVenueFailedTest extends BaseTest{

  @Test
  @Description("输入字符串过长，弹出信息：修改失败")
  public void modifyVenueFailedOne() {
    //长度过长出错
    this.logIn();
    driver.findElement(By.cssSelector(".is-active > span")).click();
    driver.findElement(By.cssSelector(".el-menu-item:nth-child(4) > span")).click();
    driver.findElement(By.cssSelector(".el-table__row:nth-child(1) .el-button")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".el-table__row:nth-child(1) .el-button"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    //随机生成长度为60的字符串
    //String title = BaseTest.generateString(60);
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).clear();
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).sendKeys( "120");
    //随机生成长度为1100的字符串
    String content = BaseTest.generateString(1100);
    driver.findElement(By.cssSelector(".el-textarea__inner")).click();
    driver.findElement(By.cssSelector(".el-textarea__inner")).clear();
    driver.findElement(By.cssSelector(".el-textarea__inner")).sendKeys(content);

    driver.findElement(By.cssSelector(".el-dialog__footer:nth-child(3) .el-button--primary > span")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".el-dialog__footer:nth-child(3) .el-button--primary > span"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    WebDriverWait wait = new WebDriverWait(driver,10);
    wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".el-message__content")));
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("修改失败"));
  }

  @Test
  @Description("场馆价格输入字母，弹出信息：输入格式不正确！")
  public void modifyVenueFailedTwo() {
    //场馆价格输入字母
    this.logIn();
    driver.findElement(By.cssSelector(".is-active > span")).click();
    driver.findElement(By.cssSelector(".el-menu-item:nth-child(4) > span")).click();
    driver.findElement(By.cssSelector(".el-table__row:nth-child(1) .el-button")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".el-table__row:nth-child(1) .el-button"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).clear();
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).sendKeys( "asd542");

    driver.findElement(By.cssSelector(".el-textarea__inner")).click();
    driver.findElement(By.cssSelector(".el-textarea__inner")).clear();
    driver.findElement(By.cssSelector(".el-textarea__inner")).sendKeys("This is a wrong type test");

    driver.findElement(By.cssSelector(".el-dialog__footer:nth-child(3) .el-button--primary > span")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".el-dialog__footer:nth-child(3) .el-button--primary > span"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("输入格式不正确！"));
  }

  @Test
  @Description("场馆价格输入小数，弹出信息：输入格式不正确！")
  public void modifyVenueFailedThree() {
    //场馆价格输入小数
    this.logIn();
    driver.findElement(By.cssSelector(".is-active > span")).click();
    driver.findElement(By.cssSelector(".el-menu-item:nth-child(4) > span")).click();
    driver.findElement(By.cssSelector(".el-table__row:nth-child(1) .el-button")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".el-table__row:nth-child(1) .el-button"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).click();
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).clear();
    driver.findElement(By.cssSelector(".el-form-item__content .el-input__inner")).sendKeys( "12.2");

    driver.findElement(By.cssSelector(".el-textarea__inner")).click();
    driver.findElement(By.cssSelector(".el-textarea__inner")).clear();
    driver.findElement(By.cssSelector(".el-textarea__inner")).sendKeys("This is a wrong type test");

    driver.findElement(By.cssSelector(".el-dialog__footer:nth-child(3) .el-button--primary > span")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".el-dialog__footer:nth-child(3) .el-button--primary > span"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    assertThat(driver.findElement(By.cssSelector(".el-message__content")).getText(), is("输入格式不正确！"));
  }
}
